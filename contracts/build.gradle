plugins {
    id 'org.jetbrains.kotlin.plugin.jpa'
    id 'net.corda.plugins.cordapp-cpk'
}

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
    test {
        resources {
            srcDir rootProject.file("config/test")
        }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    cordaProvided "javax.persistence:javax.persistence-api:$persistenceApiVersion"

    // Corda dependencies.
    cordaProvided("$corda_release_group:corda-application:$corda_release_version") { changing = true }
    cordaProvided("$corda_release_group:corda-ledger:$corda_release_version") { changing = true }
    cordaProvided("$corda_release_group:corda-crypto-api:$corda_release_version") { changing = true}

    // Logging.
    testCompile "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_version}"

    // Testing.
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile project(":modules:contracts-for-testing")

    testImplementation "org.assertj:assertj-core:$assertj_version"
    testCompile "org.junit.jupiter:junit-jupiter:$junit_version"
    testImplementation "io.mockk:mockk:$mockkVersion"
}

cordapp {
    targetPlatformVersion corda_platform_version.toInteger()
    minimumPlatformVersion 11
    contract {
        name "Token SDK Contracts"
        vendor "R3"
        licence "Apache 2"
        versionId 3
    }
    signing {
        enabled = true
    }
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    reports { junitXml.setEnabled(true) }
}

tasks.named('jar', Jar) {
    archiveBaseName = 'tokens-contract'
    bnd """\
Bundle-Name: Corda Token SDK Contracts
Bundle-SymbolicName: \${project.group}.tokens-contracts
DynamicImport-Package: *
"""
}